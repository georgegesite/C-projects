#include<cstdlib>
#include<iostream>
#include<cstring>
#include<math.h>
using namespace std;

struct node{
int info;
struct node*next;
}
*start;

class single_llist{
public:
void overall();
void insert();
void display();
int choice;
single_llist(){
start=NULL;
}
node *create_node(int);
};



   

int main (int argc, char * argv[])

{
 single_llist a;
a.overall();
start=NULL;


return EXIT_SUCCESS;

}

node* single_llist::create_node(int value){
struct node *temp,*s;
temp=new(struct node);
if(temp==NULL){
cout<<"Memory not allocated"<<endl;
return 0;
}
else{
temp->info=value;
temp->next=NULL;
return temp;
}
}

void single_llist::overall(){
while(1){
cout<<"[1]:Insert"<<endl;
cout<<"[2]:Exit"<<endl;
cout<<"Input choice: ";
cin>>choice;
switch(choice){
case 1:
insert();
display();
break;
case 2:
cout<<"end"<<endl;
exit(1);
break;
}
}
}

void single_llist::insert(){
struct node*temp,*p,*s;
int el,i,value;
cout<<"how many elements: ";
cin>>el;
cout<<endl<<"----------------"<<endl;
for(i=0;i<el;i++){
cout<<"input value: ";
cin>>value;
cout<<endl;
temp=create_node(value);
if(start==NULL){
start=temp;
start->next=NULL;
}
else{
p=start;
start=temp;
start->next=p;
}
}
}

void single_llist::display(){
struct node*temp,*p;

if(start==NULL){
cout<<"List empty"<<endl;
}
else{
cout<<"Elements of the list"<<endl;
p=start;
while(p!=NULL){
cout<<p->info<<"->";
p=p->next;
}
cout<<"NULL"<<endl;
}
}
