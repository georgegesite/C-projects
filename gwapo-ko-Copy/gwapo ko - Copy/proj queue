#include <cstdlib>
#include <iostream>

using namespace std;

class queue{
      public:
             void pre();
             void input();
             void enqueue();
             void dequeue();
             void lines();
             void exit();
             
      char str[100],nw[100][100],real[100][100],stack[100][100];
      int i,j,k,l,count,s,size,r,v,x,z,wl,wll,vow,con;
      };

int main(int argc, char *argv[])
{
    queue a;
    char let[100];
    a.pre();
    for(;;){
            a.input();
            a.lines();
            cout<<"[A]:Enqueue\n[B]:Dequeue\n[X]:Exit\n";
            a.lines();
            gets(let);
            a.lines();
            if(let[0]=='A'||let[0]=='a'){
               a.enqueue();
               a.lines();
               }
            if(let[0]=='B'||let[0]=='b'){
               a.dequeue();
               a.lines();
               }
            if(let[0]=='X'||let[0]=='x'){
               a.exit();
               a.lines();
               break;
               }
            else{
               cout<<"Try Again"<<endl;
               a.lines();
               }
    }
    system("PAUSE");
    return EXIT_SUCCESS;
}

void queue::pre(){
     size=0;
     s=0;
     v=0;
     }


void queue::input(){
     if(size==0){
        cout<<"Input String: ";
        gets(str);
        lines();
        
     x=0;
     z=0;
     wl=strlen(str);
     
     for(i=0;i<wl;i++){
        if(str[i]!=' '&&str[i]!='\0'){
        nw[x][z]=str[i];
        z++;
        }
        else{
        nw[x][z]='\0';
        x++;
        z=0;
        }
     }
     
     r=0;
     for(i=0;i<=x;i++){
        con=0;
        vow=0;
        count=0;
        strlwr(nw[i]);
        wl=strlen(nw[i]);
        for(j=0;j<wl;j++){
           if((nw[i][j]=='a'&&nw[i][j+1]=='a')||(nw[i][j]=='e'&&nw[i][j+1]=='e')||(nw[i][j]=='o'&&nw[i][j+1]=='o')
           ||(nw[i][j]=='u'&&nw[i][j+1]=='u')||(nw[i][j]=='i'&&nw[i][j+1]=='i')){
              vow++;
           }
           if((nw[i][j]=='a'&&nw[i][j+1]=='e')||(nw[i][j]=='a'&&nw[i][j+1]=='i')||(nw[i][j]=='a'&&nw[i][j+1]=='o')||
           (nw[i][j]=='a'&&nw[i][j+1]=='u')||(nw[i][j]=='e'&&nw[i][j+1]=='a')||(nw[i][j]=='e'&&nw[i][j+1]=='i')||
           (nw[i][j]=='e'&&nw[i][j+1]=='o')||(nw[i][j]=='e'&&nw[i][j+1]=='u')||(nw[i][j]=='i'&&nw[i][j+1]=='a')||
           (nw[i][j]=='i'&&nw[i][j+1]=='e')||(nw[i][j]=='i'&&nw[i][j+1]=='o')||(nw[i][j]=='i'&&nw[i][j+1]=='u')||
           (nw[i][j]=='o'&&nw[i][j+1]=='a')||(nw[i][j]=='o'&&nw[i][j+1]=='e')||(nw[i][j]=='o'&&nw[i][j+1]=='i')||
           (nw[i][j]=='o'&&nw[i][j+1]=='u')||(nw[i][j]=='u'&&nw[i][j+1]=='a')||(nw[i][j]=='u'&&nw[i][j+1]=='e')||
           (nw[i][j]=='u'&&nw[i][j+1]=='i')||(nw[i][j]=='u'&&nw[i][j+1]=='o')){
              count++;
           }
        }
        if(vow==0&&count!=0){
        strcpy(real[r],nw[i]);
        r++;
        }
}

if(r!=0){
         cout<<"Size of Queue:"<<r<<endl;
         lines();
         size=r;
         cout<<"Filtered String:\n";
         for(i=0;i<=r;i++){
         cout<<real[i]<<endl;
         }
}
if(r==0){
         cout<<"No String to be Queued"<<endl;
         size=0;
         }
}
}

void queue::enqueue(){
     
        if(s==size){
           cout<<"Queue is Full"<<endl;
           lines();
           cout<<"Queue:"<<endl;
           for(i=0;i<s;i++){
              cout<<stack[i]<<endl;
              }
           lines();
        }
        else{
           strcpy(stack[s],real[r-1]);
           wll=strlen(real[r-1]);
           
           for(j=0;j<wll;j++){
           real[r][j]='\0';
           }
           
           s++;
           r--;
           cout<<"Queue:"<<endl;
           for(i=0;i<s;i++){
              cout<<stack[i]<<endl;
           }
           lines();
        }
}

void queue::dequeue(){
    if(s==1){
       s--;
       }
    if(s==0){
       cout<<"Queue is Empty"<<endl;
       for(i=0;i<20;i++){
        wl=strlen(stack[i]);
        wll=strlen(nw[i]);
        for(j=0;j<wll;j++){
           nw[i][j]='\0';
           }
        for(j=0;j<wl;j++){
           stack[i][j]='\0';
           }
        }
       size=0;
       }
    if(s!=0&&s!=1){
       for(i=0;i<s;i++){
          if(i!=(s-1)){
          strcpy(stack[i],stack[i+1]);
          }
       }
       s--;
       cout<<"Queue:\n";
       for(i=0;i<s;i++){
          cout<<stack[i]<<endl;
          }
          }
          }

void queue::lines(){
     cout<<"-------------------------------------"<<endl;
     }
     
void queue::exit(){
     cout<<"Program terminated"<<endl;
     lines();
     }   
           

