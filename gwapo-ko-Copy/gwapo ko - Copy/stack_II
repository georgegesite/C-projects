#include<cstdlib>
#include<iostream>
#include<cstring>
#include<math.h>
using namespace std;

class stack_II
{
public:
void size();
void input();
void process();
void push();
void pop();
void exit();
void lines();

char str[100],stack[100][100],anag[100][100],real[100][100],nw[100][100],siz[100];
int i,j,k,l,m,n,o,q,r,size_stack,sum,temp,val[100],vv,count,z,x,wl,s,v=0,wl1;

};


   

int main (int argc, char * argv[])

{

char let[100];
stack_II a;
a.size();
a.lines();
for(;;){

a.process();
cout<<"[A]:Push\n[B]:Pop\n[X]:Exit\n";
a.lines();
cout<<"Enter choice: ";
gets(let);
a.lines();
cout<<endl;
if(let[0]=='A'||let[0]=='a'){
a.push();
a.lines();
}
if(let[0]=='B'||let[0]=='b'){
a.pop();
a.lines();
}


if(let[0]=='X'||let[0]=='x'){
a.exit();
break;
}
else{
cout<<"Try again";
a.lines();
}
}
 


return EXIT_SUCCESS;

}

void stack_II::size(){
cout<<"input size of stack: ";
gets(siz);
size_stack=atoi(siz);
v=0;
s=0;
}

void stack_II::input(){
if(v==0){
cout<<"Input string: ";
gets(str);cout<<endl;

}
}
void stack_II::process(){
if(v==0){
cout<<"Input string: ";
gets(str);

z=0;x=0;
wl=strlen(str);

for(i=0;i<wl;i++){
if(str[i]!=' '&&str[i]!='\0'){
nw[x][z]=str[i];
z++;
}
else{
nw[x][z]='\0';
x++;
z=0;
}
}

vv=0;
for(k=0;k<=x;k++){
sum=0;
wl1=strlen(nw[k]);
for(l=0;l<wl1;l++){
switch(nw[k][l])
    {
case 'a':temp=1;break;
case 'b':temp=2;break;
case 'c':temp=3;break;
case 'd':temp=4;break;
case 'e':temp=5;break;
case 'f':temp=6;break;
case 'g':temp=7;break;
case 'h':temp=8;break;
case 'i':temp=9;break;
case'j':temp=10;break;
case'k':temp=11;break;
case'l':temp=12;break;
case'm':temp=13;break;
case'n':temp=14;break;
case'o':temp=15;break;
case'p':temp=16;break;
case'q':temp=17;break;
case'r':temp=18;break;
case's':temp=19;break;
case't':temp=20;break;
case'u':temp=21;break;
case'v':temp=22;break;
case'w':temp=23;break;
case'x':temp=24;break;
case'y':temp=25;break;
case'z':temp=26;break;
    }
temp=temp*temp;
sum=sum+temp;
   }
val[vv]=sum;
vv++;
}

z=0;
for(i=0;i<vv;i++){
count=0;
for(j=i+1;j<vv;j++){
if(val[i]==val[j]){
count++;
}
}
if(count!=0){
strcpy(anag[z],nw[i]);
z++;
}
}
z--;
cout<<"anagram(s): ";
for(m=0;m<=z;m++){
cout<<anag[m]<<" ";
}

lines();

}
}


void stack_II::push(){
if(s==size_stack){
v++;
cout<<"stack is full"<<endl;
cout<<"stack:\n";
for(i=0;i<s;i++){
cout<<real[i]<<" ";
}
lines();
}
else{

strcpy(real[s],anag[z]);
s++;
z--;
v++;
cout<<"stack:"<<endl;
for(i=0;i<s;i++){
cout<<real[i]<<" ";
}
}
}

void stack_II::pop(){
if(s==0){
cout<<"stack is empty"<<endl;
v=0;
lines();
}
else{
s--;
v++;
cout<<"stack:"<<endl;
for(i=0;i<s;i++){
cout<<real[i]<<endl;
}
lines();
}
}

void stack_II::exit(){
cout<<"program terminated";
}

void stack_II::lines(){
cout<<endl<<"----------------------------------------------------"<<endl;
}



