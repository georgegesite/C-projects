#include<cstdlib>
#include<iostream>
#include<cstring>


using namespace std;
class stack{
    public:
            
            char word[100][100],siz[100],real[100][100],str[100];
            int x,a,b,len[100],max,i,s,size,j,v;
            void input();
            void size_stack();
            void push();
            void pop();
            void exit();
            void lines();
};
int main(int argc,char * argv[])
{
   stack a;
   char let[100];
a.size_stack();
for(;;){
a.input();
a.lines();
cout<<"[A]:Push\n"<<"[B]:Pop\n"<<"[X]:Exit"<<endl;
a.lines();
     gets(let);
     a.lines();
            if(let[0]=='A'||let[0]=='a'){
               a.push();
            }
            if(let[0]=='B'||let[0]=='b'){
              a.pop();
            }
            if(let[0]=='X'||let[0]=='x'){
             a.exit();
             break;
            }
            else{
            cout<<"Try Again"<<endl;
            }
}

return EXIT_SUCCESS;
}

void stack::size_stack(){
  lines();
   cout<<"Input size of stack:";
   gets(siz);

   size=atoi(siz);
   s=0;
   v=0;
}
void stack::input(){
  if(v==0){
  lines();
  cout<<"Input String:";
  gets(str);

  x=strlen(str);
  a=0;
  b=0;
for(i=0;i<=x;i++){
      if(str[i]!=' '&&str[i]!='\0'){
           word[a][b]=str[i];
           b++;
      }
      if(str[i]==' '||str[i]=='\0'){
           len[a]=b;
           b=0;
           a++;
      }
}
max=0;
for(i=0;i<a;i++){
       if(len[i]>len[max]){
       max=i;
       }
}
lines();
cout<<word[max]<<endl;
v++;
  }
else{}

}
void stack::push(){
  if(s==size){
      cout<<"STACK IS FULL!"<<endl;
lines();
      cout<<"Stack:\n";
      for(i=0;i<s;i++){
         cout<<real[i]<<"\n";
      }
lines();
  }
else{
   strcpy(real[s],word[max]);
   s++;
   cout<<"Stack:\n";
for(i=0;i<s;i++){
    cout<<real[i]<<"\n";
}
lines();
}
for(i=0;i<a;i++){
      for(j=0;j<len[i];j++){
        word[i][j]='\0';
      }
}
v=0;
}
void stack::pop(){
if(s==0){
cout<<"STACK IS EMPTY"<<endl;
lines();
}
if(s==1){
s--;
cout<<"STACK IS EMPTY"<<endl;
lines();
}
else if(s!=1&&s!=0){
    s--;
   cout<<"Stack:\n";
   for(i=0;i<s;i++){
    cout<<real[i]<<endl;
   }
lines();
}

}
void stack::exit(){
cout<<"Program Terminated"<<endl;
lines();
}
void stack::lines(){
cout<<"------------------------------------------------------------"<<endl;
}