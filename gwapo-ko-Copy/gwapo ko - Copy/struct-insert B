#include<cstdlib>
#include<iostream>
#include<cstring>
#include<math.h>
using namespace std;

/*Node Declaration */
struct node
{
int info;
struct node * next;
}
*start;

/*Class Declaration*/
class single_llist
{
public:
int choice;

void insert_begin();
void menu();
void overall();
void display();
node * create_node(int);
single_llist()
{
start=NULL;
}
};



   

int main (int argc, char * argv[])

{
single_llist a;
a.overall();
start=NULL;
 


return EXIT_SUCCESS;

}
/* Create Node */
node * single_llist::create_node(int value)
{
struct node *temp, *s;
temp=new(struct node);
if(temp==NULL){
cout<<"Memory not Allocated"<<endl;
return 0;
}
else{
temp->info=value;
temp->next=NULL;
return temp;
}
}
void single_llist::menu(){
cout<<"[1]:Insert at beginning\n[2]:Exit"<<endl;
}
void single_llist::overall(){
while(1)
{
menu();
cout<<"Enter choice:";
cin>>choice;
cout<<endl;
switch(choice)
{
case 1: 
insert_begin();
display();
cout<<endl;
break;
case 2:
cout<<"End"<<endl;
exit(1);
break;
}
}
}

/* Inserting element in beginning */

void single_llist::insert_begin(){
     int value;
     struct node *temp, *p;
     cout<<"Enter value:   ";
     cin>>value;
    
     temp=create_node(value);
     if(start==NULL){
         start=temp;
         start->next=NULL;
     }
     else{
         p=start;
         start=temp;
         start->next=p;
     }
     cout<<"Element Inserted at Beginning..."<<endl;
}


/* Display Elements of the List */

void single_llist::display(){
     struct node *temp;
     if(start==NULL){
         cout<<"The List is empty"<<endl;
         return;
     }
     temp=start;
     cout<<"Elements of the list: "<<endl;
     while(temp!=NULL){
         cout<<temp->info<<"->";
         temp=temp->next;
     }
     cout<<"NULL"<<endl;
}         
      
